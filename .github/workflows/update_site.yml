# .github/workflows/update_site.yml
name: Atualizar Links do Telegram

# Define o gatilho: Executa a cada hora
on:
  workflow_dispatch:
  schedule:
    - cron: '0 * * * *' 

jobs:
  build:
    runs-on: ubuntu-latest 
    steps:
    
      # Passo 1: Checkout do Código
      - name: Checkout do Repositório
        uses: actions/checkout@v4
        
      # Passo 2: Configuração do Python
      - name: Configurar Python 3.x
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'
          
      # Passo 3: Instalação de Dependências
      - name: Instalar Telethon
        run: pip install -r requirements.txt
        
      # Passo 4: Criação do Ficheiro de Configuração SECRETO
      # O BOT_TOKEN, GRUPO_USERNAME e API_HASH precisam de aspas no Python (YAML usa '${{ secrets.... }}')
      - name: Criar config.py com Secrets (Bot Token)
        run: |
          # 1. API_ID (Número)
          echo "API_ID = 9999999" > config.py           
          # 2. API_HASH (Placeholder, com aspas)
          echo "API_HASH = 'PLACEHOLDER'" >> config.py
          # 3. GRUPO_USERNAME (Com aspas, via Secret)
          echo "GRUPO_USERNAME = '${{ secrets.GRUPO_USERNAME }}'" >> config.py
          # 4. HTML_FILE (Com aspas)
          echo "HTML_FILE = 'index.html'" >> config.py
          # 5. BOT_TOKEN (Com aspas, via Secret - CORREÇÃO CRÍTICA)
          echo "BOT_TOKEN = '${{ secrets.BOT_TOKEN }}'" >> config.py 
          
      # Passo 5: Execução do Script
      - name: Executar bot_videos.py
        run: python bot_videos.py
        
      # Passo 6: Envio do Novo HTML (O Site Atualizado)
      - name: Commit e Push do HTML Atualizado
        uses: EndBug/add-and-commit@v9
        with:
          author_name: 'GitHub Actions'
          author_email: 'action@github.com'
          message: 'Atualização automática do site via GitHub Actions'
          add: 'index.html'
