name: Gerar Lista de V√≠deos Telegram

# Configura o workflow para ser executado:
# 1. Manualmente atrav√©s do bot√£o 'Run workflow'
# 2. Automaticamente, a cada 6 horas
on:
  workflow_dispatch:
  schedule:
    - cron: '0 */6 * * *' # Executa √†s 00:00, 06:00, 12:00 e 18:00 UTC

# PERMISS√ïES NECESS√ÅRIAS PARA O GITHUB PAGES
permissions:
  contents: read      # Necess√°rio para fazer o checkout do c√≥digo
  pages: write        # Necess√°rio para escrever/publicar no GitHub Pages
  id-token: write     # Necess√°rio para autentica√ß√£o OIDC do GitHub

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    # üîë CORRE√á√ÉO CRUCIAL: Adicionar o ambiente 'github-pages'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    
    steps:
      # 1. Obter o c√≥digo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configurar o ambiente Python
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      # 3. Instalar as depend√™ncias
      - name: Install dependencies
        run: pip install -r requirements.txt

      # 4. RESTAURAR A SESS√ÉO (Chave de Login)
      - name: Restore Telegram Session from Secrets
        env:
          P1: ${{ secrets.TELEGRAM_SESSION_PART1 }}
          P2: ${{ secrets.TELEGRAM_SESSION_PART2 }}
          P3: ${{ secrets.TELEGRAM_SESSION_PART3 }}
        run: |
          # Concatena as tr√™s partes do Base64
          FULL_SESSION_BASE64="${{ env.P1 }}${{ env.P2 }}${{ env.P3 }}"
          
          # Descodifica a string completa e recria o ficheiro my_account.session
          echo $FULL_SESSION_BASE64 | base64 -d > my_account.session 

      # 5. Executar o script Python
      - name: Run Telegram Script
        env:
          API_ID: ${{ secrets.API_ID }}
          API_HASH: ${{ secrets.API_HASH }}
          GRUPO_USERNAME: ${{ secrets.GRUPO_USERNAME }}
        run: python main.py

      # 6. Configurar o GitHub Pages para publica√ß√£o
      - name: Setup Pages
        uses: actions/configure-pages@v5

      # 7. Upload do ficheiro HTML gerado como um artefato
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: './public' # Aponta para a pasta onde o main.py salva o index.html

      # 8. Publicar no GitHub Pages (Deploy)
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
